{"version":3,"sources":["components/Login.js","components/Planet.js","components/Search.js","components/PlanetDetail.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","backdrop","zIndex","Login","useState","username","setUsername","password","setPassword","error","setError","open","setOpen","history","useHistory","classes","Grid","container","justify","alignItems","className","item","xs","Alert","severity","noValidate","autoComplete","onSubmit","event","preventDefault","trim","fetch","then","response","json","person","count","results","push","catch","message","TextField","id","label","variant","value","name","onChange","target","Button","color","size","type","Backdrop","CircularProgress","fontSize","props","decoration","textDecoration","Planet","planet","link","Card","to","CardContent","population","Search","setPlanet","planets","setPlanets","loading","isLoading","useEffect","data","res","filter","result","isNaN","sort","a","b","disableShrink","map","index","key","PlanetDetail","useParams","console","log","climate","rotation_period","terrain","url","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAUMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,KAG1BC,SAAU,CACRC,OAAQ,SAuGGC,EAnGD,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGQJ,mBAAS,IAHjB,mBAGXK,EAHW,KAGJC,EAHI,OAIMN,oBAAS,GAJf,mBAIXO,EAJW,KAILC,EAJK,KAKZC,EAAUC,cAEVC,EAAUpB,IA0ChB,OACE,kBAACqB,EAAA,EAAD,CACEC,WAAS,EACTjB,QAAS,EACTkB,QAAQ,SACRC,WAAW,SACXC,UAAWL,EAAQjB,MAEnB,kBAACkB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACZb,GAAS,kBAACc,EAAA,EAAD,CAAOC,SAAS,SAASf,IAErC,0BAAMgB,YAAU,EAACC,aAAa,MAAMC,SAzCjB,SAAAC,GACrBA,EAAMC,iBACkB,KAApBxB,EAASyB,QAAqC,KAApBvB,EAASuB,OACrCpB,EAAS,uCAETE,GAAQ,GACRmB,MAAM,sCAAD,OAAuC1B,IACzC2B,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAGiB,IAAjBA,EAAOC,OAGAD,EAAOE,QAAQ,GAAf,aAAoC9B,GAF7CG,EAHmB,iCAInBE,GAAQ,IAKRC,EAAQyB,KAAK,cAGhBC,OAAM,SAAA9B,GACLC,EAASD,EAAM+B,SACf5B,GAAQ,SAiBV,kBAACI,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACmB,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,MAAOxC,EACPyC,KAAK,WACLC,SA3DqB,SAAAnB,GAC7B,IAAMvB,EAAWuB,EAAMoB,OAAOH,MAC9BvC,EAAYD,OA4DR,kBAACW,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACmB,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,MAAOtC,EACPuC,KAAK,WACLC,SAhEqB,SAAAnB,GAC7B,IAAMrB,EAAWqB,EAAMoB,OAAOH,MAC9BrC,EAAYD,OAiER,kBAACS,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAAC2B,EAAA,EAAD,CACEL,QAAQ,YACRM,MAAM,UACNC,KAAK,QACLC,KAAK,UAJP,WAUJ,kBAACC,EAAA,EAAD,CAAUjC,UAAWL,EAAQd,SAAUU,KAAMA,GAC3C,kBAAC2C,EAAA,EAAD,CAAkBJ,MAAM,e,0BC3G1BvD,EAAYC,YAAW,CAC3BuD,KAAM,CACJI,SAAU,SAAAC,GAAK,OAAIA,EAAQ,KAE7BC,WAAY,CACVC,eAAgB,UAuBLC,EAnBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQT,EAAW,EAAXA,KAClBpC,EAAUpB,EAAUwD,GAEpBU,EAAI,yBAAqBD,EAAOd,MAEtC,OACE,kBAAC9B,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,kBAACwC,EAAA,EAAD,CAAM1C,UAAWL,EAAQoC,MACvB,kBAAC,IAAD,CAAMY,GAAIF,EAAMzC,UAAWL,EAAQ0C,YACjC,kBAACO,EAAA,EAAD,KACE,oCAAUJ,EAAOd,MACjB,2BAAIc,EAAOK,iBCwCRC,EA7DA,WAAO,IAAD,EACS9D,mBAAS,IADlB,mBACZwD,EADY,KACJO,EADI,OAEW/D,mBAAS,IAFpB,mBAEZgE,EAFY,KAEHC,EAFG,OAGUjE,oBAAS,GAHnB,mBAGZkE,EAHY,KAGHC,EAHG,KAKnBC,qBAAU,WACJZ,IACFW,GAAU,GACVxC,MAAM,uCAAD,OAAwC6B,EAAxC,yBACF5B,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAyC,GACJJ,EAAWI,EAAKpC,SAEhB,IAAMqC,EAAMD,EAAKpC,QACdsC,QAAO,SAAAC,GAAM,OAAKC,OAAOD,EAAOX,eAChCa,MAAK,SAACC,EAAGC,GACR,OAAKD,EAAEd,YAAce,EAAEf,YACb,GACEc,EAAEd,YAAce,EAAEf,WACrB,EAEA,KAGbI,EAAWK,GACXH,GAAU,SAGf,CAACX,IAOJ,OACE,6BACE,kBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACjB,QAAS,GACvB,kBAACgB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACmB,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,MAAOe,EACPd,KAAK,SACLC,SAfa,SAAAnB,GAAU,IACvBiB,EAAUjB,EAAMoB,OAAhBH,MACRsB,EAAUtB,OAgBN,kBAAC7B,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACZgD,GAAW,kBAAChB,EAAA,EAAD,CAAkB2B,eAAa,KAE5Cb,EAAQc,KAAI,SAACtB,EAAQuB,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAOvB,OAAQA,EAAQT,KAAMgC,UCbrCE,EA3CM,WAAO,IAClBvC,EAASwC,cAATxC,KADiB,EAGG1C,mBAAS,IAHZ,mBAGlBwD,EAHkB,KAGVO,EAHU,KAgBzB,OAXAK,qBAAU,WACRzC,MAAM,uCAAD,OAAwCe,IAC1Cd,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAyC,GACJc,QAAQC,IAAI,UAAWf,GACvBN,EAAUM,EAAKpC,QAAQ,UAK3B,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACjB,QAAS,GACvB,kBAACgB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,8CAEF,kBAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,yCADF,IAC0BsC,EAAOd,MAEjC,kBAAC9B,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,4CADF,IAC6BsC,EAAO6B,SAEpC,kBAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,+CADF,IACgCsC,EAAOK,YAEvC,kBAACjD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,oDADF,IACqCsC,EAAO8B,iBAE5C,kBAAC1E,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,4CADF,IAC6BsC,EAAO+B,SAEpC,kBAAC3E,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,wCADF,IACyBsC,EAAOgC,OCjBvBC,MAhBf,WACE,OACE,yBAAKzE,UAAU,OACb,kBAAC,IAAD,CAAQ0E,SAAS,aACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9F,IACjC,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,UAAUC,UAAW/B,IACvC,kBAAC,IAAD,CAAO8B,KAAK,wBACV,kBAAC,EAAD,WCXZE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d9ed8f3e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\nimport { useHistory } from 'react-router-dom'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  backdrop: {\n    zIndex: 100\n  }\n}))\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n\n  const classes = useStyles()\n\n  const onHandleChangeUserName = event => {\n    const username = event.target.value\n    setUsername(username)\n  }\n\n  const onHandleChangePassword = event => {\n    const password = event.target.value\n    setPassword(password)\n  }\n\n  const onHandleSubmit = event => {\n    event.preventDefault()\n    if (username.trim() === '' && password.trim() === '') {\n      setError('Please enter username and password')\n    } else {\n      setOpen(true)\n      fetch(`https://swapi.co/api/people?search=${username}`)\n        .then(response => {\n          return response.json()\n        })\n        .then(person => {\n          const errorMessage = 'Invalid username and password'\n\n          if (person.count === 0) {\n            setError(errorMessage)\n            setOpen(false)\n          } else if (person.results[0]['birth_year'] !== password) {\n            setError(errorMessage)\n            setOpen(false)\n          } else {\n            history.push('/search')\n          }\n        })\n        .catch(error => {\n          setError(error.message)\n          setOpen(true)\n        })\n    }\n  }\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify='center'\n      alignItems='center'\n      className={classes.root}\n    >\n      <Grid item xs={12}>\n        {error && <Alert severity='error'>{error}</Alert>}\n      </Grid>\n      <form noValidate autoComplete='off' onSubmit={onHandleSubmit}>\n        <Grid item xs={12}>\n          <TextField\n            id='outlined-basic'\n            label='username'\n            variant='outlined'\n            value={username}\n            name='username'\n            onChange={onHandleChangeUserName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='outlined-basic'\n            label='password'\n            variant='outlined'\n            value={password}\n            name='password'\n            onChange={onHandleChangePassword}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant='contained'\n            color='primary'\n            size='large'\n            type='submit'\n          >\n            Login\n          </Button>\n        </Grid>\n      </form>\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    </Grid>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  size: {\n    fontSize: props => props + 18\n  },\n  decoration: {\n    textDecoration: 'none'\n  }\n})\n\nconst Planet = ({ planet, size }) => {\n  const classes = useStyles(size)\n\n  const link = `/search/planet/${planet.name}`\n\n  return (\n    <Grid item xs={3}>\n      <Card className={classes.size}>\n        <Link to={link} className={classes.decoration}>\n          <CardContent>\n            <p>Name: {planet.name}</p>\n            <p>{planet.population}</p>\n          </CardContent>\n        </Link>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default Planet\n","import React, { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Planet from './Planet'\n\nconst Search = () => {\n  const [planet, setPlanet] = useState('')\n  const [planets, setPlanets] = useState([])\n  const [loading, isLoading] = useState(false)\n\n  useEffect(() => {\n    if (planet) {\n      isLoading(true)\n      fetch(`https://swapi.co/api/planets?search=${planet}&ordering=population`)\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setPlanets(data.results)\n\n          const res = data.results\n            .filter(result => !isNaN(+result.population))\n            .sort((a, b) => {\n              if (+a.population < +b.population) {\n                return -1\n              } else if (+a.population > +b.population) {\n                return 1\n              } else {\n                return 0\n              }\n            })\n          setPlanets(res)\n          isLoading(false)\n        })\n    }\n  }, [planet])\n\n  const onHandleChange = event => {\n    const { value } = event.target\n    setPlanet(value)\n  }\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            id='outlined-basic'\n            label='planet'\n            variant='outlined'\n            value={planet}\n            name='planet'\n            onChange={onHandleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {loading && <CircularProgress disableShrink />}\n        </Grid>\n        {planets.map((planet, index) => (\n          <Planet key={index} planet={planet} size={index} />\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { useParams } from 'react-router-dom'\n\nconst PlanetDetail = () => {\n  const { name } = useParams()\n\n  const [planet, setPlanet] = useState({})\n\n  useEffect(() => {\n    fetch(`https://swapi.co/api/planets?search=${name}`)\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        console.log('resssss', data)\n        setPlanet(data.results[0])\n      })\n  })\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <h2>Planet Detail</h2>\n      </Grid>\n      <Grid item xs={12}>\n        <strong>Name:</strong> {planet.name}\n      </Grid>\n      <Grid item xs={12}>\n        <strong>Climate:</strong> {planet.climate}\n      </Grid>\n      <Grid item xs={12}>\n        <strong>Population:</strong> {planet.population}\n      </Grid>\n      <Grid item xs={12}>\n        <strong>Rotation period:</strong> {planet.rotation_period}\n      </Grid>\n      <Grid item xs={12}>\n        <strong>Terrain:</strong> {planet.terrain}\n      </Grid>\n      <Grid item xs={12}>\n        <strong>URL:</strong> {planet.url}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PlanetDetail\n","import React from 'react'\nimport './App.css'\nimport Login from './components/Login'\nimport Search from './components/Search'\nimport PlanetDetail from './components/PlanetDetail'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router basename=\"/starwars\">\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/search' component={Search} />\n          <Route path='/search/planet/:name'>\n            <PlanetDetail />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}